AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: > 
  Testing PilkoLinter on source revision


Parameters:



  pAppName:
    Type: String
    Description: Used to name CI/CD resources.
    Default: myapp

  # CodePipeline
  # GitHub Repo

  pRepoOwner:
    Type: String
    Description: Owner not username. If the repo owner is an organization, enter organization name.
    Default: MadisonReed

  pRepoName:
    Type: String 
    Default: mr

  pCodestarConnectionArn:
    Type: String
    Description: ARN of the CodeStar Connection.
    Default: arn:aws:codestar-connections:us-east-1:313588322221:connection/e6cec00c-84fd-4370-b355-5291eaa602bc

  pTriggerBranch:
    Type: String
    Description: Branch to trigger CodePipeline off of.
    Default: master


  # CodeBuild
  pCodeBuildComputeType:
    Type: String
    Description: CodeBuild Compute Type
    Default: BUILD_GENERAL1_SMALL
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
      - BUILD_GENERAL1_XLARGE

  pCodeBuildImage:
    Type: String
    Description: Base image used by CodeBuild
    Default: aws/codebuild/standard:7.0

  pBuildSpecPath:
    Type: String
    Description: Path and name for the Buildspec in repo
    Default: buildspec.yml

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      pAppName:
        default: Application Name
      pRepoOwner:
        default: GitHub Repository Owner
      pRepoName:
        default: GitHub Repository Name
      pCodestarConnectionArn:
        default: Codestar Connection Arn
      pTriggerBranch:
        default: GitHub Trigger Branch
      pCodeBuildComputeType:
        default: CodeBuild Compute Type
      pCodeBuildImage:
        default: CodeBuild Docker Image
      pBuildSpecPath:
        default: Buildspec file path

    ParameterGroups:
      - Label:
          default: CodePipeline Settings
        Parameters:
          - pAppName
      - Label:
          default: CodePipeline Source Settings
        Parameters:
          - pRepoOwner
          - pRepoName
          - pCodestarConnectionArn
          - pTriggerBranch
      - Label:
          default: CodeBuild Settings
        Parameters:
          - pCodeBuildComputeType
          - pCodeBuildImage
          - pBuildSpecPath

Resources:




  # IAM Role - CodeBuild
  codeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${pAppName}-build-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${pAppName}-build
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${pAppName}-build:*
        - PolicyName: S3ArtifactBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub "arn:aws:s3:::${artifactBucket}"
                  - !Sub "arn:aws:s3:::${artifactBucket}/*"
        - PolicyName: GitCloneConnection
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: 
                  - !Ref pCodestarConnectionArn
        - PolicyName: s3ReadWrite
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - "*"
        - PolicyName: ParamStore
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameters*
                Resource: 
                  - "*"
        - PolicyName: SAMDeploy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - 
                Sid: AllowSAMBucketAccess
                Effect: Allow
                Action:
                  - s3:*
                Resource: 
                  - "arn:aws:s3:::aws-sam-cli-managed-default-*/*"
              - 
                Sid: IAMRoles
                Effect: Allow
                Action:
                  - iam:*
                Resource: arn:aws:iam::*:role/*
              - 
                Sid: Cloudformation
                Effect: Allow
                Action:
                  - cloudformation:*
                Resource: "*"
              -
                Sid: AllowResourceCreation
                Effect: Allow
                Action:
                  - route53:*
                  - ecs:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - apigateway:*
                  - logs:*
                  - cloudwatch:*
                  - lambda:*
                  - events:*
                Resource: "*"

  codeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pAppName}-build
      Artifacts:
        Type: CODEPIPELINE
      Description: CodeBuild Project
      Environment:
        ComputeType: !Ref pCodeBuildComputeType
        Image: !Ref pCodeBuildImage
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ACCOUNT_ID 
            Value: !Ref AWS::AccountId 
            Type: PLAINTEXT
          

      ServiceRole: !GetAtt codeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref pBuildSpecPath
      TimeoutInMinutes: 60
      # Cache:
      #   Type: LOCAL
      #   Modes: # You can specify one or more cache mode, 
      #     - LOCAL_CUSTOM_CACHE
      #     # - LOCAL_DOCKER_LAYER_CACHE
      #     # - LOCAL_SOURCE_CACHE

  codeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${codeBuildProject}"
      RetentionInDays: 7
      
  # IAM Role - CodePipeline    

  codePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${pAppName}-pipeline-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: s3Artifacts
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: 
                  - !Sub "arn:aws:s3:::${artifactBucket}"
                  - !Sub "arn:aws:s3:::${artifactBucket}/*"
        - PolicyName: codeBuildTrigger
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
                Resource: 
                  - !GetAtt codeBuildProject.Arn
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: 
                  - "*"
          

      
 # CodePipeline

  artifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${pAppName}-pipeline-artifacts-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # Artifact bucket cleanup
  DeleteObjectStorage:
    Type: Custom::S3DeleteObjectsLambda
    Properties:
      ServiceToken: !GetAtt DeleteS3ObjectsFunction.Arn
      Bucket: !Ref artifactBucket

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Sid: AllowLogging
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              -
                Sid: DeleteBucketObjects
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:DeleteObjectVersion
                  - s3:PutBucketPolicy
                Resource:
                  - !Sub arn:aws:s3:::${artifactBucket}
                  - !Sub arn:aws:s3:::${artifactBucket}/*

  DeleteS3ObjectsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Deletes objects from buckets provisioned by CloudFormation
      Handler: index.handler
      Runtime: python3.11
      Role: !GetAtt LambdaRole.Arn
      Timeout: 120
      Code:
        ZipFile: |
          import json
          import cfnresponse
          import boto3
          import logging

          from botocore.exceptions import ClientError

          logger = logging.getLogger()
          logger.setLevel(logging.INFO)
          s3 = boto3.resource('s3')

          def handler(event, context):
            logger.info("Received event: %s" % json.dumps(event))
            bucket = s3.Bucket(event['ResourceProperties']['Bucket'])

            try:
                # No work on Create/Update
                if event['RequestType'] == 'Delete':
                    delete_objects(bucket)
                # If we get here, everything succeeded
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
            except Exception as e:
                # Log full stack and notify CloudFormation of failure
                logger.exception("Cleanup failed")
                cfnresponse.send(event, context, cfnresponse.FAILED, {})

          def delete_objects(bucket):   
            name = bucket.name
            # 1) Attach Deny policy to block new uploads
            deny_policy = {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Deny",
                "Principal": "*",
                "Action": "s3:PutObject",
                "Resource": f"arn:aws:s3:::{name}/*"
              }]
            }
            bucket.Policy().put(Policy=json.dumps(deny_policy))

            # 2) Delete all objects in the bucket
            bucket.object_versions.delete()
            bucket.objects.all().delete()
            return cfnresponse.SUCCESS
      Tags:
        - Key: resource:createdBy
          Value: Cloudformation
            
  cleanupLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${DeleteS3ObjectsFunction}
      RetentionInDays: 7

  codePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref artifactBucket
        Type: S3
      Name: !Sub ${pAppName}-pipeline
      RoleArn: !GetAtt codePipelineServiceRole.Arn
      PipelineType: V2
      RestartExecutionOnUpdate: false
      # Variables:
      #   - Name: PR_ID
      #     Description: Pull Request ID
      #   - Name: PR_EVENT
      #     Description: 'Type of PR event. Valid values: [opened, synchronize, reopened, closed]'
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              Namespace: SourceVariables
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                FullRepositoryId: !Sub ${pRepoOwner}/${pRepoName}
                ConnectionArn: !Ref pCodestarConnectionArn
                BranchName: !Ref pTriggerBranch
                DetectChanges: false
                OutputArtifactFormat: CODEBUILD_CLONE_REF # Code Build Git Full Clone
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref codeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

Outputs:

  Version:
    Description: Template Version
    Value: ephemeral-pipeline-build-db-dump-0.1
